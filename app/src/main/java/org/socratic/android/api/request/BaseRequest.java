package org.socratic.android.api.request;

import org.socratic.android.globals.HttpManager;

import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Map;

import okhttp3.Request;
import okhttp3.RequestBody;

/**
 * @date 2017-02-02
 */
public abstract class BaseRequest {

    public static final String DELETE = "DELETE";
    public static final String GET = "GET";
    public static final String POST = "POST";
    public static final String PUT = "PUT";

    private Map<String, String> mParams;
    private String mTag;

    public BaseRequest() {
        mParams = new HashMap<>();
    }

    public void putParam(String name, String val) {
        if (val != null) {
            mParams.put(name, val);
        }
    }

    public abstract String getHttpMethod();

    public abstract String getUrl();

    // Gives the implementer the opportunity to set the header info,
    // passing along default header information generated by HttpManager
    public abstract void setHeaderInfo(Request.Builder builder, HttpManager.HeaderInfos header);

    public RequestBody buildRequestBody() {
        return null;
    }

    public String getParamsAsUrlString() {
        if (mParams.size() > 0) {

            StringBuilder sb = new StringBuilder();

            int index = 0;
            for (Map.Entry<String, String> it : mParams.entrySet()) {
                if (index == 0) {
                    sb.append("?");
                } else {
                    sb.append("&");
                }
                sb.append(it.getKey());
                sb.append("=");
                sb.append(URLEncoder.encode(it.getValue()));

                index++;
            }

            return sb.toString();
        }

        return null;
    }

    public String getTag() {
        return mTag;
    }

    public void setTag(String tag) {
        mTag = tag;
    }
}